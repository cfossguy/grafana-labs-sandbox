apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install
  labels:
    app.kubernetes.io/component: tokengen
    app.kubernetes.io/instance: gel
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: enterprise-logs
    app.kubernetes.io/version: v1.3.0
    helm.sh/chart: enterprise-logs-2.0.0
  name: gel-enterprise-logs-tokengen
  namespace: default
spec:
  backoffLimit: 6
  completions: 1
  parallelism: 1
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: tokengen
        app.kubernetes.io/instance: gel
        app.kubernetes.io/name: enterprise-logs
        job-name: gel-enterprise-logs-tokengen
    spec:
      containers:
      - command:
        - /bin/bash
        - -euc
        - kubectl create secret generic gel-admin-token --from-file=token=/shared/admin-token
          --from-literal=grafana-token="$(base64 <(echo :$(cat /shared/admin-token)))"
        image: bitnami/kubectl
        imagePullPolicy: IfNotPresent
        name: create-secret
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /shared
          name: shared
        - mountPath: /etc/loki/config
          name: config
        - mountPath: /etc/enterprise-logs/license
          name: license
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - -config.file=/etc/loki/config/config.yaml
        - -target=tokengen
        - -admin.client.backend-type=s3
        - -admin.client.s3.endpoint=gel-minio.default.svc:9000
        - -admin.client.s3.bucket-name=enterprise-logs-admin
        - -admin.client.s3.access-key-id=enterprise-logs
        - -admin.client.s3.secret-access-key=supersecret
        - -admin.client.s3.insecure=true
        - -tokengen.token-file=/shared/admin-token
        image: docker.io/grafana/enterprise-logs:v1.3.0
        imagePullPolicy: IfNotPresent
        name: enterprise-logs
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /shared
          name: shared
        - mountPath: /etc/loki/config
          name: config
        - mountPath: /etc/enterprise-logs/license
          name: license
      restartPolicy: OnFailure
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccount: gel-enterprise-logs-tokengen
      serviceAccountName: gel-enterprise-logs-tokengen
      terminationGracePeriodSeconds: 30
      volumes:
      - name: config
        secret:
          defaultMode: 420
          secretName: enterprise-logs-config
      - name: license
        secret:
          defaultMode: 420
          secretName: enterprise-logs-license
      - emptyDir: {}
        name: shared

  apiVersion: batch/v1
  kind: Job
  metadata:
    name: ge-logs-tokengen
  spec:
    template:
      spec:
        containers:
          - name: ge-logs-tokengen
            image: grafana/enterprise-logs:v1.1.0
            imagePullPolicy: IfNotPresent
            args:
              - -config.file=/etc/loki/config/config.yaml
              - -target=tokengen
              - -tokengen.token-file=/shared/admin-token
            volumeMounts:
              - mountPath: /shared
                name: shared
              - mountPath: /etc/loki/config
                name: config
              - mountPath: /etc/enterprise-logs/license
                name: license
        volumes:
          - name: config
            secret:
              defaultMode: 420
              secretName: enterprise-logs-config
          - name: license
            secret:
              defaultMode: 420
              secretName: enterprise-logs-license
          - emptyDir: { }
            name: shared
        serviceAccount: $kubeServiceAccountName
        serviceAccountName: $kubeServiceAccountName
        restartPolicy: Never
        imagePullSecrets:
          - name: gcr
